//note:- This problem asks to print all the tuple. 
//in this method, we first add everything to the hash map.
void printPairs(int *a, int n, int k) {
	// Write your code here
	unordered_map<int,int> hm;
    for(int i=0;i<n;i++){
      if(hm.find(a[i]+k)!=hm.end()){
        for(int j=0;j<hm[a[i]+k];j++){
          cout<<min(a[i],a[i]+k]<<" "<<max(a[i],a[i]+k)<<endl;
        }
      }
      
      else if(hm.find(a[i]-k)!=hm.end()){
        for(int j=0;j<hm[a[i]-k];j++){
          cout<<min(a[i],a[i]-k]<<" "<<max(a[i],a[i]-k)<<endl;
        }
      }
      hm[a[i]]++;
    }
   
}

// in this method we first print(if the complemntary is found) and then we add to the map.
void printPairs(int *a, int n, int k) {
	// Write your code here
	unordered_map<int,int> hm;
    for(int i=0;i<n;i++){
      if(hm.find(a[i]+k)!=hm.end()){
        for(int j=0;j<hm[a[i]+k];j++){
          cout<<min(a[i],(a[i]+k))<<" "<<max(a[i],(a[i]+k))<<endl;
        }
      }
      
       if(hm.find(a[i]-k)!=hm.end() &&k!=0){
        for(int j=0;j<hm[a[i]-k];j++){
          cout<<min(a[i],(a[i]-k))<<" "<<max(a[i],(a[i]-k))<<endl;
        }
      }
      hm[a[i]]++;
    }

   
}
